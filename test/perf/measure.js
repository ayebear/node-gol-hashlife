// Generated by CoffeeScript 1.9.3

/*
 @author Raoul Harel
 @license The MIT license (LICENSE.txt)
 @copyright 2015 Raoul Harel
 @url rharel/node-gol-hashlife on GitHub
 */

(function() {
  var Simulation, assert, by_x_then_y, gol, helpers;

  gol = require('../../lib/gol');

  Simulation = gol.Simulation;

  helpers = require('./../helpers');

  by_x_then_y = helpers.by_x_then_y;

  assert = require('chai').assert;

  module.exports = function(name, gen0, gen1, step) {
    var i, j, len, lib_size0, lib_size1, p, sim;
    sim = new Simulation(step + 2);
    for (i = j = 0, len = gen0.length; j < len; i = ++j) {
      p = gen0[i];
      sim.set(p.x, p.y);
    }
    lib_size0 = sim._library.size();
    console.log("Computing pattern " + name + " to t = 2^" + step + "...");
    console.time('Time: ');
    sim._root.future();
    console.timeEnd('Time: ');
    lib_size1 = sim._library.size();
    console.log('Library size: ' + lib_size1);
    console.log('Library growth: ' + (lib_size1 - lib_size0));
    return assert.deepEqual(sim.get(step).sort(by_x_then_y), gen1.sort(by_x_then_y), 'incorrect simulation');
  };

}).call(this);

//# sourceMappingURL=measure.js.map
